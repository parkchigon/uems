<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.flk.mng.data.mapper.DataMapper">
	<select id ="selectDataList" parameterType="Data" resultType="flkMap" >
		/* DataMapper.selectDataList */
		<include refid="com.flk.common.mapper.CommonMapper.selectPagingTop" />
		SELECT
			ROW_NUMBER() OVER (ORDER BY MONTH DESC , SITE_ID ASC) AS RNUM
			,MD.SITE_ID
			,MD.MONTH
		 	,MD.PREV_COOL_CHARGE
		 	,MD.PRES_COOL_CHARGE
		 	,MD.PREV_ENERGY_AMOUNT
		 	,MD.PRES_ENERGY_AMOUNT
		 	,MD.PREV_TCO_AMOUNT
		 	,MD.PRES_TCO_AMOUNT
		 	,MD.COOLING_LOAD_AMOUNT
		 	,S.SITE_DESC
		 	,S.SG_ID
		FROM TBL_MANAGE_DATA MD INNER JOIN TBL_SITE S
		ON MD.SITE_ID = S.SITE_ID
		WHERE 1=1 
		<if test="searchCondition2 != '' and searchCondition2 != null">
	    	AND MD.SITE_ID = #{searchCondition2}
	    </if>
	    <if test="year != '' and year != null">
	    	AND SUBSTR(MONTH,1,4) = #{year}
	    </if>
	    ORDER BY MONTH DESC , SITE_ID ASC
		<include refid="com.flk.common.mapper.CommonMapper.selectPagingBottom" /> 
	</select>

	<select id ="selectDataCount" parameterType ="Data" resultType ="int">
		SELECT COUNT(*) 
		FROM TBL_MANAGE_DATA 
		WHERE MONTH = #{month}
		AND SITE_ID = #{siteId} 
	</select>
	
	<insert id="insertData" parameterType="Data">
		/* DataMapper.insertData */
		INSERT INTO TBL_MANAGE_DATA
		(	MONTH
			,SITE_ID
		 	,PREV_COOL_CHARGE
		 	,PRES_COOL_CHARGE
		 	,PREV_ENERGY_AMOUNT
		 	,PRES_ENERGY_AMOUNT
		 	,PREV_TCO_AMOUNT
		 	,PRES_TCO_AMOUNT
		 	,COOLING_LOAD_AMOUNT
		 	,NIGHTELEC_DAY_AMOUNT
		 	,NIGHTELEC_NIGHT_AMOUNT
		 	,ELEC_POWERFACTOR_CHARGE
		 	,ELEC_DISCOUNT_CHARGE
		 	<if test="chargeApplyPower != '' and chargeApplyPower != null">
		 	,CHARGE_APPLY_POWER
		 	</if>
		 	,GAS_AVERAGE_CALORIE
		 	,BILL_BASIC_CHARGE1
		 	<if test="heatingCharge != '' and heatingCharge != null">
		 	,HEATING_CHARGE
		 	</if>
		 	<if test="heatUsageCharge != '' and heatUsageCharge != null">
		 	,HEAT_USAGE_CHARGE
		 	</if>
		 	<if test="heatUsageAmount != '' and heatUsageAmount != null">
		 	,HEAT_USAGE_AMOUNT
		 	</if>
		 	<if test="coolingCharge != '' and coolingCharge != null">
		 	,COOLING_CHARGE
		 	</if>
		 	,DAYELEC_AMOUNT
		 	,UPDATE_ID
		 	,REG_ID
		 	,REG_DATE
		)VALUES(
			 #{month}
			,#{siteId}
			,#{prevCoolCharge}
			,#{presCoolCharge}
			,#{prevEnergyAmount}
			,#{presEnergyAmount}
			,#{prevTcoAmount}
			,#{presTcoAmount}
			,#{coolingLoadAmount}
		 	,#{nightelecDayAmount}
		 	,#{nightelecNightAmount}
		 	,#{elecPowerfactorCharge}
		 	,#{elecDiscountCharge}
		 	<if test="chargeApplyPower != '' and chargeApplyPower != null">
		 	,#{chargeApplyPower}
		 	</if>
		 	,#{gasAverageCalorie}
		 	,#{billBasicCharge1}
		 	<if test="heatingCharge != '' and heatingCharge != null">
		 	,#{heatingCharge}
		 	</if>
		 	<if test="heatUsageCharge != '' and heatUsageCharge != null">
		 	,#{heatUsageCharge}
		 	</if>
		 	<if test="heatUsageAmount != '' and heatUsageAmount != null">
		 	,#{heatUsageAmount}
		 	</if>
		 	<if test="coolingCharge != '' and coolingCharge != null">
		 	,#{coolingCharge}
		 	</if>
		 	,#{dayelecAmount}
			,#{updateId}
			,#{regId}
			,now()
		)
		
	</insert>
	
	<select id ="selectDataInfo" parameterType="Data" resultType="flkMap" >
		/* DataMapper.selectDataInfo */
		SELECT
			MD.SITE_ID
			,MD.MONTH
		 	,MD.PREV_COOL_CHARGE
		 	,MD.PRES_COOL_CHARGE
		 	,MD.PREV_ENERGY_AMOUNT
		 	,MD.PRES_ENERGY_AMOUNT
		 	,MD.PREV_TCO_AMOUNT
		 	,MD.PRES_TCO_AMOUNT
		 	,MD.COOLING_LOAD_AMOUNT
		 	,MD.NIGHTELEC_DAY_AMOUNT
		 	,MD.NIGHTELEC_NIGHT_AMOUNT
		 	,MD.ELEC_POWERFACTOR_CHARGE
		 	,MD.ELEC_DISCOUNT_CHARGE
		 	,MD.CHARGE_APPLY_POWER
		 	,MD.GAS_AVERAGE_CALORIE
		 	,MD.BILL_BASIC_CHARGE1
		 	,MD.HEATING_CHARGE
		 	,MD.HEAT_USAGE_CHARGE
		 	,MD.HEAT_USAGE_AMOUNT
		 	,MD.COOLING_CHARGE
		 	,MD.DAYELEC_AMOUNT
		 	,S.SG_ID
		FROM TBL_MANAGE_DATA MD INNER JOIN TBL_SITE S
		ON MD.SITE_ID = S.SITE_ID
		WHERE MD.MONTH = #{month}
		AND MD.SITE_ID = #{siteId}
	</select>
	
	<update id="updateData" parameterType="Data">
		/* DataMapper.updateData */
		UPDATE  TBL_MANAGE_DATA
		SET
			 MONTH = #{month}
			,PREV_COOL_CHARGE = #{prevCoolCharge}
			,PRES_COOL_CHARGE = #{presCoolCharge}
			,PREV_ENERGY_AMOUNT = #{prevEnergyAmount}
			,PRES_ENERGY_AMOUNT = #{presEnergyAmount}
			,PREV_TCO_AMOUNT = #{prevTcoAmount}
			,PRES_TCO_AMOUNT = #{presTcoAmount}
			,COOLING_LOAD_AMOUNT = #{coolingLoadAmount}
		 	,NIGHTELEC_DAY_AMOUNT = #{nightelecDayAmount}
		 	,NIGHTELEC_NIGHT_AMOUNT = #{nightelecNightAmount}
		 	,ELEC_POWERFACTOR_CHARGE = #{elecPowerfactorCharge}
		 	,ELEC_DISCOUNT_CHARGE = #{elecDiscountCharge}
		 	<if test="chargeApplyPower != '' and chargeApplyPower != null">
		 	,CHARGE_APPLY_POWER = #{chargeApplyPower}
		 	</if>
		 	,GAS_AVERAGE_CALORIE = #{gasAverageCalorie}
		 	,BILL_BASIC_CHARGE1 = #{billBasicCharge1}
		 	<if test="heatingCharge != '' and heatingCharge != null">
		 	,HEATING_CHARGE = #{heatingCharge}
		 	</if>
		 	<if test="heatUsageCharge != '' and heatUsageCharge != null">
		 	,HEAT_USAGE_CHARGE = #{heatUsageCharge}
		 	</if>
		 	<if test="heatUsageAmount != '' and heatUsageAmount != null">
		 	,HEAT_USAGE_AMOUNT = #{heatUsageAmount}
		 	</if>
		 	<if test="coolingCharge != '' and coolingCharge != null">
		 	,COOLING_CHARGE = #{coolingCharge}
		 	</if>
		 	,DAYELEC_AMOUNT = #{dayelecAmount}
			,UPDATE_ID = #{updateId}
			,UPDATE_DATE = now()
		WHERE MONTH = #{monthKey}
		AND SITE_ID = #{siteIdKey}
	</update>
	
	<delete id = "deleteData" parameterType="Data">
		DELETE FROM TBL_MANAGE_DATA
		WHERE MONTH = #{monthKey}
		AND SITE_ID = #{siteIdKey}
	</delete>
	
	
	<!-- 일반전기 조회 -->
	<select id="selectDayelecAmount" parameterType="Data" resultType="java.lang.String">
		SELECT IF(s1.tag_value IS NOT NULL, IF(s2.tag_value IS NOT NULL, s2.tag_value-s1.tag_value, NULL), NULL) AS tag_value
		FROM 
		(
		  SELECT tag_value, ROW_NUMBER() OVER (PARTITION BY tag_id ORDER BY stats_time ASC) rank
		  FROM tbl_stat_1min_${siteCd}
		  WHERE (stats_time >= #{statStartDate}
		  AND stats_time <![CDATA[<=]]> #{statEndDate})
		  AND tag_id = (
		    SELECT tag_id
		    FROM tbl_price_mapping
		    WHERE site_cd = #{siteCd}
		    AND use_flag = 'Y'
		    AND energy_type = '01'
		  )
		  AND tag_value IS NOT NULL
		) s1
		LEFT OUTER JOIN
		(
		  SELECT tag_value, ROW_NUMBER() OVER (PARTITION BY tag_id ORDER BY stats_time DESC) rank
		  FROM tbl_stat_1min_${siteCd}
		  WHERE (stats_time >= #{statStartDate}
		  AND stats_time <![CDATA[<=]]> #{statEndDate})
		  AND tag_id = (
		    SELECT tag_id
		    FROM tbl_price_mapping
		    WHERE site_cd = #{siteCd}
		    AND use_flag = 'Y'
		    AND energy_type = '01'
		  )
		  AND tag_value IS NOT NULL
		) s2
		ON s1.rank = s2.rank
		WHERE s1.rank = 1
	</select>
	
	<select id="selectElecRate" parameterType="Data" resultType="Data">
		SELECT elec_day_factor, elec_night_factor 
		  FROM TBL_MANAGE_FACILITY_RATE mfr
		  JOIN TBL_SITE s
		    ON mfr.site_id = s.site_id
		   AND s.site_cd = #{siteCd}
		   AND mfr.use_flag='Y'
	</select>
	
	<!-- 냉방사용요금(기존) 조회 -->
	<select id="selectPrevCoolCharge" parameterType="Data" resultType="Data" statementType="CALLABLE">
		{ CALL sp_month_previous_charge(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{gasAverageCalorie,mode=IN,jdbcType=VARCHAR}
				, #{prevCoolCharge,mode=OUT,jdbcType=VARCHAR})
		}
	</select>
	
	<!-- 냉방사용요금(빙축) 조회 -->
	<select id="selectPresCoolCharge" parameterType="Data" resultType="Data"  statementType="CALLABLE">
		{ CALL sp_month_ice_storage_charge(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{nightelecDayAmount,mode=IN,jdbcType=VARCHAR}
				, #{nightelecNightAmount,mode=IN,jdbcType=VARCHAR}
				, #{elecPowerfactorCharge,mode=IN,jdbcType=VARCHAR}
				, #{elecDiscountCharge,mode=IN,jdbcType=VARCHAR}
				, #{chargeApplyPower,mode=IN,jdbcType=VARCHAR}
				, #{billBasicCharge1,mode=IN,jdbcType=VARCHAR}
				, #{presCoolCharge,mode=OUT,jdbcType=VARCHAR})
		}
	</select>

	<!-- 에너지사용량(기존) 조회 -->
	<select id="selectPrevEnergyAmount" parameterType="Data" resultType="Data"  statementType="CALLABLE">
		{ CALL sp_month_previous_toe(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{prevEnergyAmount,mode=OUT,jdbcType=VARCHAR})
		}
	</select>
	
	<!-- 에너지사용량(빙축) 조회 -->
	<select id="selectPresEnergyAmount" parameterType="Data" resultType="Data"  statementType="CALLABLE">
		{ CALL sp_month_ice_storage_toe(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{nightelecDayAmount,mode=IN,jdbcType=VARCHAR}
				, #{nightelecNightAmount,mode=IN,jdbcType=VARCHAR}
				, #{presEnergyAmount,mode=OUT,jdbcType=VARCHAR})
		}
	</select>

	<!-- 탄소배출량(기존) 조회 -->
	<select id="selectPrevTcoAmount" parameterType="Data" resultType="Data"  statementType="CALLABLE">
		{ CALL sp_month_previous_co2(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{prevTcoAmount,mode=OUT,jdbcType=VARCHAR})
		}
	</select>
	
	<!-- 탄소배출량(빙축) 조회 -->
	<select id="selectPresTcoAmount" parameterType="Data" resultType="Data"  statementType="CALLABLE">
		{ CALL sp_month_ice_storage_co2(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{nightelecDayAmount,mode=IN,jdbcType=VARCHAR}
				, #{nightelecNightAmount,mode=IN,jdbcType=VARCHAR}
				, #{presTcoAmount,mode=OUT,jdbcType=VARCHAR})
		}
	</select>

	<!-- 냉방부하량 조회 -->
	<select id="selectCoolingLoadAmount" parameterType="Data" resultType="Data" statementType="CALLABLE">
		{ CALL sp_month_cooling_load_amount(
				#{siteCd,mode=IN,jdbcType=VARCHAR}
				, LEFT(#{statStartDate,mode=IN,jdbcType=VARCHAR}, 8)
				, LEFT(#{statEndDate,mode=IN,jdbcType=VARCHAR}, 8)
				, #{coolingLoadAmount,mode=OUT,jdbcType=VARCHAR})
		}
	</select>
	
</mapper>